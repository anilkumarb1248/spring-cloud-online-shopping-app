This is a online shopping application developed by using spring cloud.
Services are added
	config-server
	eureka-server
	search-service
	product-service
	order-service
	cart-service
	user-service
	customer-service
	shopping-gateway
	
Need to follow the order while starting the services:
First start the "Config Server" - static port - 2020 - http://localhost:2020/ConfigServer/application/default/
Next "Eureka Server" - static port - 2070 - http://localhost:2070/EurekaServer/
Next "API Gateway" - static port - 9999
	Note: without API gateway we can't access the services, using random ports for the services.

Then start the services like product, search ...

Import the Soap UI project and test the services which are added.


config-server
	To test the config server (after the server only)
		http://localhost:2020/ConfigServer/application/default/
		
		application -> is the property file name
		default -> is the environment profile, we can use dev, qa or prod alos to see specific env properties.
		
		The config server searches for the master branch, if it is not ther it will throw an error.
		We can specify the branch also where the application properties are present
		
		http://localhost:2020/ConfigServer/application/default/main
		


----
Done many docker configurations
eureka host changes in all microservices and in git repo
config server changes in all ms
Added Docker file and unpacke plugin in all ms
Using static ports instead of using dynamic port 

-- To create the images by using Docker file
docker build -f Dockerfile -t config-server-img:latest .
docker build -f Dockerfile -t eureka-server-img:latest .
docker build -f Dockerfile -t product-service-img:latest .
docker build -f Dockerfile -t search-service-img:latest .
docker build -f Dockerfile -t shopping-gateway-img:latest .

mvn clean package

docker network create online-shopping-app

-- Running the containers
docker container run --network=online-shopping-app -d -p 2020:2020 --name=config-server-container config-server-img
docker container run --network=online-shopping-app -d -p 2070:2070 --name=eureka-server-container eureka-server-img
docker container run --network=online-shopping-app -d -p 2032:2032 --name=product-service-container product-service-img
docker container run --network=online-shopping-app -d -p 2031:2031 --name=search-service-container search-service-img
docker container run --network=online-shopping-app -d -p 9999:9999 --name=shopping-gateway-container shopping-gateway-img
		